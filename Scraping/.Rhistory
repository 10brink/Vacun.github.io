getwd()
library(dplyr)
library(ggplot2)
df <- read.csv('listings_clean.csv', dec = ",")
str(df)
df <- read.csv('listings_clean.csv')
str(df)
df <- read.csv('listings_clean.csv',stringsAsFactors = F)
str(df)
df <- read.table(header = T, sep = ",")
df <- read.table('listings_clean.csv',header = T, sep = ",")
str(df)
View(df)
df <- read.csv('listings_clean.csv',stringsAsFactors = F)
View(df)
df <- read.table('listings_clean.csv',header = T, sep = ",")
df <- read.table('listings_zillow.csv',header = T, sep = ",")
str(df)
View(df)
df <- read.csv('listings_zillow.csv',stringsAsFactors = F)
str(df)
View(df)
df_zillow <- read.csv('listings_zillow.csv',stringsAsFactors = F)
rm(df)
str(df)
df_zillow <- read.csv('listings_zillow.csv',stringsAsFactors = F,strip.white = T)
df_trulia <- read.csv('listings_trulia.csv', stringsAsFactors = F)
View(df_trulia)
View(df_zillow)
df_zillow <- read.csv('listings_zillow.csv',stringsAsFactors = F)
View(df_zillow)
df_zillow.colnames
df_zillow.colnames()
colnames(df_zillow)
df_zillow['FACTS']
df_zillow['FACTS'][8]
df_zillow[8,'FACTS']
df_zillow[7,'FACTS']
library(tidyr)
separate(df_zillow,Facts,sep = "\n")
library(splitstackshape)
install.packages('splitstackshape')
library(splitstackshape)
setwd("~/Desktop/Bootcamp/Vacun.github.io/Scraping")
library(dplyr)
library(ggplot2)
source('~/Desktop/Scraping_project.R')
source('~/Desktop/Scraping_project.R')
library(tidyr)
df_trulia <- read.csv('listings_trulia.csv',stringsAsFactors = F)
df_zillow <- read.csv('zillow_clean_final.csv', stringsAsFactors = F)
df_myzips <- read.csv('my_zips.csv',stringsAsFactors = F)
colnames(df_zillow)
colnames(df_trulia)
summary(df_zillow)
summary(df_trulia)
class(df_trulia[['zip_code']])
df_trulia <- df_trulia[!is.na(df_trulia$price),]
sum(is.na(df_trulia$neighborhood))
df_trulia['neighborhood'] <- as.factor(df_trulia$neighborhood)
options(scipen=5)
ggplot(df_trulia,aes(x = price)) +
geom_histogram(binwidth = 100000,color='white') +
theme(axis.text.x= element_text(angle=45)) +
xlim(0, 5000000)
ggplot(df_trulia,aes(x = price)) +
geom_density() +
theme(axis.text.x= element_text(angle=45)) +
xlim(0, 5000000)
g <- ggplot(df_trulia)
g+geom_bar(aes(x=zip_code))
ggplot(df_trulia, aes(x = log(price)))+geom_density()
exp(12.5)
exp(17.5)
summary(df_trulia['price'])
df_bedroom <- df_trulia %>% group_by(bedrooms) %>%
summarise_each(funs(mean),price,price_per_sqft)
names(df_trulia)
names(df_zillow)
sapply(df_trulia,sd)
table(sapply(df_trulia,sd))
sapply(df_trulia,sd)
sapply(df_trulia['price','bathrooms'],sd)
sapply(df_trulia[c('price','bathrooms')],sd)
sapply(df_trulia[c('price','bedrooms','bathrooms')],sd)
sapply(df_trulia[c('price','bedroom','bathrooms')],sd)
sapply(df_trulia[c('price','bedrooms','bathrooms')],sd)
names(df_trulia)
sapply(df_trulia[c('price','bedrooms','bathrooms','sqft','price_per_sqft')],sd)
df_trulia['bedrooms']
class(df_trulia$bedrooms)
sum(is.na(df_trulia$bedrooms))
sum(is.na(df_trulia[c('price','bedrooms','bathrooms','sqft','price_per_sqft')]))
sapply(df_trulia[c('price','bedrooms','bathrooms','sqft','price_per_sqft')],is.na)
sum(sapply(df_trulia[c('price','bedrooms','bathrooms','sqft','price_per_sqft')],is.na))
sapply(df_trulia[c('price','bedrooms','bathrooms','sqft','price_per_sqft')],is.na) %>%
summarise_each(funs(sum))
sapply(df_trulia[c('price','bedrooms','bathrooms','sqft','price_per_sqft')],is.na) %>%
summarise_each(funs(sum),price)
sapply(df_trulia[c('price','bedrooms','bathrooms','sqft','price_per_sqft')],is.na) %>%tpl() %>%
summarise_each(funs(sum),price)
sapply(df_trulia[c('price','bedrooms','bathrooms','sqft','price_per_sqft')],is.na) %>%tbl() %>%
summarise_each(funs(sum),price)
sapply(df_trulia[c('price','bedrooms','bathrooms','sqft','price_per_sqft')],is.na) %>%tbl() %>%
summarise_each(funs(mean),price)
df_neigh_tally <- df_trulia %>% group_by(neighborhood) %>% tally(sort=TRUE)
df_neigh_tally[1:15,] %>%
ggplot() +
geom_bar(aes(x = reorder(neighborhood,n),y=n),stat = 'identity',fill="#0072B2") +
theme(axis.text.x= element_text(angle=45)) +
coord_flip()
ggplot(df_trulia, aes(x = log(price)))+geom_density()
df_bedroom <- df_trulia %>% group_by(bedrooms) %>%
summarise_each(funs(mean),price,price_per_sqft)
left_join(df_trulia,df_myzips, by = c("zip_code" = "zip"))
df_bedroom <- df_trulia %>% group_by(bedrooms) %>%
summarise_each(funs(mean),price,price_per_sqft)
ggplot(df_trulia,aes(x = price)) +
geom_histogram(binwidth = 100000,color='white') +
theme(axis.text.x= element_text(angle=45)) +
xlim(0, 5000000)
ggplot(df_trulia,aes(x = price)) +
geom_density() +
theme(axis.text.x= element_text(angle=45)) +
xlim(0, 5000000)
ggplot(df_trulia,aes(x = price)) +
geom_histogram(binwidth = 100000,color='white') +
theme(axis.text.x= element_text(angle=45)) +
xlim(0, 5000000)
g+geom_bar(aes(x=zip_code))
g <- ggplot(df_trulia)
ggplot(df_trulia, aes(x = log(price)))+geom_density()
exp(12.5)
exp(17.5)
summary(df_trulia['price'])
df_bedroom <- df_trulia %>% group_by(bedrooms) %>%
summarise_each(funs(mean),price,price_per_sqft)
df_bedroom
ggplot(df_trulia,aes(x = price)) +
geom_histogram(binwidth = 100000,color='white') +
theme(axis.text.x= element_text(angle=45)) +
xlim(0, 5000000)
ggplot(df_trulia, aes(x = log(price)))+geom_density()
df_neigh_tally <- df_trulia %>% group_by(neighborhood) %>% tally(sort=TRUE)
df_neigh_tally[1:15,] %>%
ggplot() +
geom_bar(aes(x = reorder(neighborhood,n),y=n),stat = 'identity',fill="#0072B2") +
theme(axis.text.x= element_text(angle=45)) +
coord_flip()
