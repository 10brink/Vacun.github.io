getwd()
library(dplyr)
library(ggplot2)
df <- read.csv('listings_clean.csv', dec = ",")
str(df)
df <- read.csv('listings_clean.csv')
str(df)
df <- read.csv('listings_clean.csv',stringsAsFactors = F)
str(df)
df <- read.table(header = T, sep = ",")
df <- read.table('listings_clean.csv',header = T, sep = ",")
str(df)
View(df)
df <- read.csv('listings_clean.csv',stringsAsFactors = F)
View(df)
df <- read.table('listings_clean.csv',header = T, sep = ",")
df <- read.table('listings_zillow.csv',header = T, sep = ",")
str(df)
View(df)
df <- read.csv('listings_zillow.csv',stringsAsFactors = F)
str(df)
View(df)
df_zillow <- read.csv('listings_zillow.csv',stringsAsFactors = F)
rm(df)
str(df)
df_zillow <- read.csv('listings_zillow.csv',stringsAsFactors = F,strip.white = T)
df_trulia <- read.csv('listings_trulia.csv', stringsAsFactors = F)
View(df_trulia)
View(df_zillow)
df_zillow <- read.csv('listings_zillow.csv',stringsAsFactors = F)
View(df_zillow)
df_zillow.colnames
df_zillow.colnames()
colnames(df_zillow)
df_zillow['FACTS']
df_zillow['FACTS'][8]
df_zillow[8,'FACTS']
df_zillow[7,'FACTS']
library(tidyr)
separate(df_zillow,Facts,sep = "\n")
library(splitstackshape)
install.packages('splitstackshape')
library(splitstackshape)
setwd("~/Desktop/Bootcamp/Vacun.github.io/Scraping")
library(dplyr)
library(ggplot2)
library(tidyr)
df_trulia <- read.csv('listings_trulia.csv',stringsAsFactors = F)
df_zillow <- read.csv('zillow_clean_final.csv', stringsAsFactors = F)
colnames(df_zillow)
colnames(df_trulia)
summary(df_zillow)
summary(df_trulia)
class(df_trulia[['zip_code']])
df_trulia <- df_trulia[!is.na(df_trulia$price),]
sum(is.na(df_trulia$neighborhood))
df_zillow['barough'] <- as.factor(df_zillow[['barough']])
ggplot(df_trulia,aes(x = price))+geom_histogram()
ggplot(df_trulia,aes(x = price))+geom_histogram(bins = 10)
ggplot(df_trulia,aes(x = price))+geom_histogram(bins = 50)
ggplot(df_trulia,aes(x = price))+geom_histogram(bins = 100)
ggplot(df_trulia,aes(x = price))+geom_histogram(bins = 100) + xlim(0, 4e+07)
ggplot(df_trulia,aes(x = price))+geom_histogram(bins = 100) + xlim(0, 2e+07)
ggplot(df_trulia,aes(x = price))+geom_histogram(bins = 10) + xlim(0, 2e+07)
ggplot(df_trulia,aes(x = price))+geom_histogram(bins = 1000) + xlim(0, 2e+07)
ggplot(df_trulia,aes(x = price))+geom_histogram(binwidth = 100000) + xlim(0, 2e+07)
ggplot(df_trulia,aes(x = price))+geom_histogram(binwidth = 100000) + xlim(0, 1e+07)
ggplot(df_trulia,aes(x = price))+geom_histogram(binwidth = 100000) + xlim(0, 1e+06)
ggplot(df_trulia,aes(x = price))+geom_histogram(binwidth = 100000) + xlim(0, 2e+06)
ggplot(df_trulia,aes(x = price))+geom_histogram(binwidth = 100000) + xlim(0, 2.5e+06)
ggplot(df_trulia,aes(x = price))+geom_histogram(binwidth = 10000) + xlim(0, 2.5e+06)
ggplot(df_trulia,aes(x = price))+geom_histogram(bins = 20) + xlim(0, 2.5e+06)
ggplot(df_trulia,aes(x = price))+geom_histogram(bins = 30) + xlim(0, 2.5e+06)
ggplot(df_trulia,aes(x = price))+geom_histogram(bins = 40) + xlim(0, 2.5e+06)
ggplot(df_trulia,aes(x = price))+geom_histogram(binwidth = 100000) + xlim(0, 2.5e+06)
ggplot(df_trulia,aes(x = price))+geom_histogram(binwidth = 100000,color='red') + xlim(0, 2.5e+06)
ggplot(df_trulia,aes(x = price))+geom_histogram(binwidth = 100000,color='red',fill='green') + xlim(0, 2.5e+06)
ggplot(df_trulia,aes(x = price))+geom_histogram(binwidth = 100000,color='white',fill='blue') + xlim(0, 2.5e+06)
ggplot(df_trulia,aes(x = price))+geom_histogram(binwidth = 100000,color='white') + xlim(0, 2.5e+06)
ggplot(df_trulia,aes(x = price))+geom_histogram(binwidth = 100000,color='white') + xlim(0, 3e+06)
ggplot(df_trulia,aes(x = price))+geom_histogram(binwidth = 100000,color='white') + xlim(0, 4e+06)
ggplot(df_trulia,aes(x = price)) +
geom_histogram(binwidth = 100000,color='white') +
theme(axis.text.x= element_text(angel=[45])) +
xlim(0, 4e+06)
ggplot(df_trulia,aes(x = price)) +
geom_histogram(binwidth = 100000,color='white') +
theme(axis.text.x= element_text(angel=45)) +
xlim(0, 4e+06)
ggplot(df_trulia,aes(x = price)) +
geom_histogram(binwidth = 100000,color='white') +
theme(axis.text.x= element_text(angle=45)) +
xlim(0, 4e+06)
ggplot(df_trulia,aes(x = price/1000)) +
geom_histogram(binwidth = 100000,color='white') +
theme(axis.text.x= element_text(angle=45)) +
xlim(0, 4e+06)
ggplot(df_trulia,aes(x = price/1000)) +
geom_histogram(binwidth = 100000,color='white') +
theme(axis.text.x= element_text(angle=45)) +
xlim(0, 1e+06)
ggplot(df_trulia,aes(x = price/1000)) +
geom_histogram(binwidth = 100000,color='white') +
theme(axis.text.x= element_text(angle=45)) #+
ggplot(df_trulia,aes(x = price/1000)) +
geom_histogram(binwidth = 100,color='white') +
theme(axis.text.x= element_text(angle=45)) #+
ggplot(df_trulia,aes(x = price/1000)) +
geom_histogram(binwidth = 100,color='white') +
theme(axis.text.x= element_text(angle=45)) +
xlim(0, 2.5e+05)
ggplot(df_trulia,aes(x = price/1000)) +
geom_histogram(binwidth = 100,color='white') +
theme(axis.text.x= element_text(angle=45)) +
xlim(0, 2.5e+04)
ggplot(df_trulia,aes(x = price/1000)) +
geom_histogram(binwidth = 100,color='white') +
theme(axis.text.x= element_text(angle=45)) +
xlim(0, 1.5e+04)
ggplot(df_trulia,aes(x = price/1000)) +
geom_histogram(binwidth = 100,color='white') +
theme(axis.text.x= element_text(angle=45)) +
xlim(0, 1e+04)
ggplot(df_trulia,aes(x = price/1000)) +
geom_histogram(binwidth = 50,color='white') +
theme(axis.text.x= element_text(angle=45)) +
xlim(0, 1e+04)
ggplot(df_trulia,aes(x = price/1000)) +
geom_histogram(binwidth = 100,color='white') +
theme(axis.text.x= element_text(angle=45)) +
xlim(0, 1e+04)
ggplot(df_trulia,aes(x = price)) +
geom_histogram(binwidth = 100,color='white') +
theme(axis.text.x= element_text(angle=45)) +
xlim(0, 1e+04)
ggplot(df_trulia,aes(x = price)) +
geom_histogram(binwidth = 100,color='white') +
theme(axis.text.x= element_text(angle=45)) +
xlim(0, 1e+06)
ggplot(df_trulia,aes(x = price)) +
geom_histogram(binwidth = 100000,color='white') +
theme(axis.text.x= element_text(angle=45)) +
xlim(0, 1e+06)
ggplot(df_trulia,aes(x = price)) +
geom_histogram(binwidth = 100000,color='white') +
theme(axis.text.x= element_text(angle=45)) +
xlim(0, 2e+06)
ggplot(df_trulia,aes(x = price)) +
geom_histogram(binwidth = 100000,color='white') +
theme(axis.text.x= element_text(angle=45)) +
xlim(0, 3e+06)
ggplot(df_trulia,aes(x = price)) +
geom_histogram(binwidth = 100000,color='white') +
theme(axis.text.x= element_text(angle=45)) +
xlim(0, 3000000)
options(scipen=5)
ggplot(df_trulia,aes(x = price)) +
geom_histogram(binwidth = 100000,color='white') +
theme(axis.text.x= element_text(angle=45)) +
xlim(0, 3000000)
ggplot(df_trulia,aes(x = price)) +
geom_histogram(binwidth = 100000,color='white') +
theme(axis.text.x= element_text(angle=45)) +
xlim(0, 4000000)
ggplot(df_trulia,aes(x = price)) +
geom_histogram(binwidth = 100000,color='white') +
theme(axis.text.x= element_text(angle=45)) +
xlim(0, 5000000)
ggplot(df_trulia,aes(x = price)) +
geom_freqpoly(binwidth = 100000,color='white') +
theme(axis.text.x= element_text(angle=45)) +
xlim(0, 5000000)
ggplot(df_trulia,aes(x = price)) +
geom_freqpoly(binwidth = 100000) +
theme(axis.text.x= element_text(angle=45)) +
xlim(0, 5000000)
ggplot(df_trulia,aes(x = price)) +
geom_freqpoly(binwidth = 100000) + smooth() +
theme(axis.text.x= element_text(angle=45)) +
xlim(0, 5000000)
ggplot(df_trulia,aes(x = price)) +
geom_freqpoly(binwidth = 100000) + smooth(x = price) +
theme(axis.text.x= element_text(angle=45)) +
xlim(0, 5000000)
ggplot(df_trulia,aes(x = price)) +
geom_bar(binwidth = 100000) +
theme(axis.text.x= element_text(angle=45)) +
xlim(0, 5000000)
df_trulia %>% filter(zip_code %in% c(10001:10005)) %>%
ggplot(aes(x = zip_code,y = price)) +
geom_boxplot()
df_trulia %>% filter(zip_code %in% c(10001:10005)) %>%
ggplot(aes(x = zip_code,y = price)) +
geom_violin()
df_trulia %>% filter(zip_code %in% c(10001:10005)) %>%
ggplot(aes(x = zip_code,y = price)) +
geom_violin(x= zip_code)
ggplot(df_trulia, aes(x = log(price)))+geom_density()
ggplot(df_trulia,aes(x = price)) +
geom_freqpoly(binwidth = 100000) +
theme(axis.text.x= element_text(angle=45)) +
xlim(0, 5000000)
ggplot(df_trulia,aes(x = price)) +
geom_density(binwidth = 100000) +
theme(axis.text.x= element_text(angle=45)) +
xlim(0, 5000000)
ggplot(df_trulia,aes(x = price)) +
geom_density() +
theme(axis.text.x= element_text(angle=45)) +
xlim(0, 5000000)
ggplot(df_trulia,aes(x = price)) +
geom_density() +
theme(axis.text.x= element_text(angle=45))# +
ggplot(df_trulia,aes(x = price)) +
geom_density() +
theme(axis.text.x= element_text(angle=45)) +
xlim(0, 5000000)
g+geom_bar(aes(x=zip_code))
intersect(unique(df_trulia['zip_code']),unique(df_zillow['zip']))
df_trulia %>% group_by(neighborhood) %>%
summarise_each(fun(count))
df_trulia %>% group_by(neighborhood) %>%
summarise_each(funs(count))
df_trulia['neighborhood']
df_trulia['neighborhood'] <- as.factor(df_trulia$neighborhood)
df_trulia %>% group_by(neighborhood) %>%
summarise_each(funs(count))
class(df_trulia$neighborhood)
library(plyr)
df_neigh <- count(df_trulia,neighborhood)
df_neigh <- count(df_trulia,df_trulia$neighborhood)
df_neigh <- count(df_trulia,df_trulia['neighborhood'])
df_neigh <- count(df_trulia,df_trulia[['neighborhood']])
df_neigh <- count(df_trulia,df_trulia[['neighborhood']])
df_neigh <- count(df_trulia,df_trulia[['neighborhood']])
library(dplyr)
library(ggplot2)
library(tidyr)
trulia_tbl <- tbl_df(df_trulia)
df_neigh <- count(trulia_tbl['neighborhood'])
df_neigh
trulia_tbl %>% group_by(neighborhood) %>% tally(sort=TRUE)
df_neigh_tally <- trulia_tbl %>% group_by(neighborhood) %>% tally(sort=TRUE)
df_neigh_tally
df_trulia <- read.csv('listings_trulia.csv',stringsAsFactors = F)
df_neigh_tally <- trulia_tbl %>% group_by(neighborhood) %>% tally(sort=TRUE)
df_neigh_tally
df_neigh <- count(trulia_tbl['neighborhood'])
df_neigh
df_neigh_tally <- trulia_tbl %>% group_by(neighborhood) %>% tally(sort=TRUE)
df_neigh_tally
df_neigh_tally <- df_trulia %>% group_by(neighborhood) %>% tally(sort=TRUE)
df_neigh_tally
df_neigh <- count(df_trulia['neighborhood'])
df_neigh
class(df_trulia$neighborhood)
df_neigh_tally <- df_trulia %>% group_by(neighborhood) %>% tally(sort=TRUE)
df_neigh_tally <- df_trulia %>% group_by(neighborhood) %>% tally(sort=TRUE)
df_neigh_tally
class(df_trulia)
class(trulia_tbl)
class(as.tbl(trulia_tbl))
class(df_neigh)
class(df_neigh_tally)
df_neigh_tally[1:10,]
df_neigh_tally[1:10,] %>% ggplot() + geom_point(aes(x = neighborhood,y=n))
df_neigh_tally[1:10,] %>%
ggplot() + geom_histogram(aes(x = neighborhood,y=n),stat = 'identity')
df_neigh_tally[1:10,] %>%
ggplot() + geom_histogram(aes(x = neighborhood,y=n),stat = 'identity') +
theme(angle=45)
df_neigh_tally[1:10,] %>%
ggplot() + geom_histogram(aes(x = neighborhood,y=n),stat = 'identity') +
theme(element.text(angle=45))
df_neigh_tally[1:10,] %>%
ggplot() + geom_histogram(aes(x = neighborhood,y=n),stat = 'identity') +
theme(axis.text.x= element_text(angle=45))
df_neigh_tally[1:10,] %>%
ggplot() + geom_histogram(aes(x = reorder(neighborhoodmn),y=n),stat = 'identity') +
theme(axis.text.x= element_text(angle=45))
df_neigh_tally[1:10,] %>%
ggplot() + geom_histogram(aes(x = reorder(neighborhoodm,n),y=n),stat = 'identity') +
theme(axis.text.x= element_text(angle=45))
df_neigh_tally[1:10,] %>%
ggplot() + geom_histogram(aes(x = reorder(neighborhood,n),y=n),stat = 'identity') +
theme(axis.text.x= element_text(angle=45))
df_neigh_tally[1:10,] %>%
ggplot() + geom_histogram(aes(x = reorder(n,neighborhood),y=n),stat = 'identity') +
theme(axis.text.x= element_text(angle=45))
df_neigh_tally[1:10,] %>%
ggplot() + geom_histogram(aes(x = reorder(neighborhood,n),y=n),stat = 'identity') +
theme(axis.text.x= element_text(angle=45))
df_neigh_tally[1:10,] %>%
ggplot() + geom_bar(aes(x = reorder(neighborhood,n),y=n),stat = 'identity') +
theme(axis.text.x= element_text(angle=45))
df_neigh_tally[1:10,] %>%
ggplot() +
geom_bar(aes(x = reorder(!neighborhood,n),y=n),stat = 'identity') +
theme(axis.text.x= element_text(angle=45))
df_neigh_tally[1:10,] %>%
ggplot() +
geom_bar(aes(x = reorder(-neighborhood,n),y=n),stat = 'identity') +
theme(axis.text.x= element_text(angle=45))
df_neigh_tally[1:10,] %>%
ggplot() +
geom_bar(aes(x = neighborhood,y=reorder(n)),stat = 'identity') +
theme(axis.text.x= element_text(angle=45))
df_neigh_tally[1:10,] %>%
ggplot() +
geom_bar(aes(x = neighborhood ,y=reorder(n)),stat = 'identity') +
theme(axis.text.x= element_text(angle=45))
df_neigh_tally[1:10,] %>%
ggplot() +
geom_bar(aes(x = reorder(neighborhood,-n),y=reorder(n)),stat = 'identity') +
theme(axis.text.x= element_text(angle=45))
df_neigh_tally[1:10,] %>%
ggplot() +
geom_bar(aes(x = reorder(neighborhood,n),y=reorder(n)),stat = 'identity') +
theme(axis.text.x= element_text(angle=45))
df_neigh_tally[1:10,] %>%
ggplot() +
geom_bar(aes(x = reorder(neighborhood,n),y=n),stat = 'identity') +
theme(axis.text.x= element_text(angle=45))
df_neigh_tally[1:10,] %>%
ggplot() +
geom_bar(aes(x = reorder(neighborhood,-n),y=n),stat = 'identity') +
theme(axis.text.x= element_text(angle=45))
df_neigh_tally[1:10,] %>%
ggplot() +
geom_bar(aes(x = reorder(neighborhood,-n),y=n),stat = 'identity') +
theme(axis.text.x= element_text(angle=45)) +
coord_flip()
df_neigh_tally[1:10,] %>%
ggplot() +
geom_bar(aes(x = reorder(neighborhood,-n),y=n),stat = 'identity') +
theme(axis.text.x= element_text(angle=45)) +
coord_flip()
df_neigh_tally[1:10,] %>%
ggplot() +
geom_bar(aes(x = reorder(neighborhood,n),y=n),stat = 'identity') +
theme(axis.text.x= element_text(angle=45)) +
coord_flip()
df_neigh_tally[1:15,] %>%
ggplot() +
geom_bar(aes(x = reorder(neighborhood,n),y=n),stat = 'identity') +
theme(axis.text.x= element_text(angle=45)) +
coord_flip()
df_neigh_tally[1:15,] %>%
ggplot() +
geom_bar(aes(x = reorder(neighborhood,n),y=n),stat = 'identity',color='red') +
theme(axis.text.x= element_text(angle=45)) +
coord_flip()
df_neigh_tally[1:15,] %>%
ggplot() +
geom_bar(aes(x = reorder(neighborhood,n),y=n),stat = 'identity',fill='red') +
theme(axis.text.x= element_text(angle=45)) +
coord_flip()
df_neigh_tally[1:15,] %>%
ggplot() +
geom_bar(aes(x = reorder(neighborhood,n),y=n),stat = 'identity') +
theme(axis.text.x= element_text(angle=45)) +
coord_flip()
df_neigh_tally[1:15,] %>%
ggplot() +
geom_bar(aes(x = reorder(neighborhood,n),y=n),stat = 'identity') +
theme(axis.text.x= element_text(angle=45)) +
coord_flip() + scale_fill_hue(l=40
df_neigh_tally[1:15,] %>%
ggplot() +
geom_bar(aes(x = reorder(neighborhood,n),y=n),stat = 'identity') +
theme(axis.text.x= element_text(angle=45)) +
coord_flip() + scale_fill_hue(l=40)
df_neigh_tally[1:15,] %>%
ggplot() +
geom_bar(aes(x = reorder(neighborhood,n),y=n),stat = 'identity') +
theme(axis.text.x= element_text(angle=45)) +
coord_flip()
df_neigh_tally[1:15,] %>%
ggplot() +
geom_bar(aes(x = reorder(neighborhood,n),y=n),stat = 'identity') +
theme(axis.text.x= element_text(angle=45)) +
coord_flip() + scale_fill_manual(values=c("red", "blue", "green"))
df_neigh_tally[1:15,] %>%
ggplot() +
geom_bar(aes(x = reorder(neighborhood,n),y=n),stat = 'identity',color="#0072B2") +
theme(axis.text.x= element_text(angle=45)) +
coord_flip()
df_neigh_tally[1:15,] %>%
ggplot() +
geom_bar(aes(x = reorder(neighborhood,n),y=n),stat = 'identity',fill="#0072B2") +
theme(axis.text.x= element_text(angle=45)) +
coord_flip()
df_myzips <- read.csv('my_zips.csv',stringsAsFactors = F)
names(df_myzips)
df_myzips <- read.csv('my_zips.csv',stringsAsFactors = F)
names(df_myzips)
df_myzips <- read.csv('my_zips.csv',stringsAsFactors = F)
names(df_myzips)
left_join(df_trulia,df_myzips, by = c("zip_code" = "zip"))
as.numeric(df_myzips[['zip']])
df_myzips[['zip']]
library(tidyr)
separate(df_myzips, zip,, sep=",")
separate(df_myzips, zip, sep=",")
separate(df_myzips, zip,into(1,2,3,4,5,6,7), sep=",")
separate(df_myzips, zip,into=c(1,2,3,4,5,6,7), sep=",")
df_myzips[['zip']]
separate(df_myzips, zip, into=c(1:10), sep=",")
10301 %in$ df_myzips['zip']
df_myzips['zip'] =='10301'
df_myzips['zip']
df_myzips['zip'] == '10314'
class(df_myzips[['zip']])
setwd("~/Desktop/Bootcamp/Vacun.github.io/Scraping/Shiny_trulia")
shiny::runApp()
